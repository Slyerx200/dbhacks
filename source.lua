--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==4) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end if (v0==5) then v16=nil;v16=function(v17,v18,...)local v27=0;local v28;local v29;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;while true do if (v27==1) then v30=function(v40,v41,v42)if v42 then local v78=(v40/((1384 -(1136 + 246))^(v41-((6450 -4689) -(384 + 1376)))))%((2 + 0)^(((v42-(1 -0)) -(v41-((3 -1) -1))) + 1)) ;return v78-(v78%1) ;else local v79=2^(v41-(1 -0)) ;return (((v40%(v79 + v79))>=v79) and (3 -2)) or (689 -(671 + 18)) ;end end;v31=nil;v31=function()local v48=v2(v17,v28,v28);v28=v28 + 1 ;return v48;end;v32=nil;v27=2;end if (v27==4) then v37=nil;v37=function(...)return {...},v13("#",...);end;v38=nil;v38=function()local v49=0;local v50;local v51;local v52;local v53;local v54;local v55;local v56;while true do if ((1 -0)~=v49) then else v52=nil;v53=nil;v49=7 -5 ;end if (v49~=(384 -(43 + 341))) then else v50=0;v51=nil;v49=1;end if ((5 -2)==v49) then v56=nil;while true do local v87=0;local v88;local v89;while true do if (v87==(0 + 0)) then v88=0;v89=nil;v87=1655 -(1394 + 260) ;end if (v87==(1690 -(440 + 1249))) then while true do if (v88==0) then v89=0;while true do if (1~=v89) then else if (0==v50) then local v117=608 -(265 + 343) ;while true do if (0==v117) then v51={};v52={};v117=1;end if (v117==1) then v53={};v50=2 -1 ;break;end end end if (v50==(3 + 0)) then local v118=0;local v119;while true do if (v118==0) then v119=0;while true do local v121=0 -0 ;while true do if (v121~=0) then else if (v119==1) then return v54;end if (v119==(0 + 0)) then local v214=0;while true do if ((1 + 0)~=v214) then else v119=1 -0 ;break;end if (0==v214) then local v249=904 -(170 + 734) ;while true do if (v249==1) then v214=1 -0 ;break;end if (0~=v249) then else for v268=2 -1 ,v33() do v52[v268-(2 -1) ]=v38();end for v270=1,v33() do v53[v270]=v33();end v249=1;end end end end end break;end end end break;end end end break;end if (v89~=(0 + 0)) then else local v116=0;while true do if (v116==(0 + 0)) then local v120=0 -0 ;while true do if ((1104 -(439 + 664))==v120) then v116=1 + 0 ;break;end if (0==v120) then if (1==v50) then local v189=0 + 0 ;local v190;while true do if (v189~=(0 -0)) then else v190=0;while true do if (v190==(2 -1)) then v56={};v50=1 + 1 ;break;end if (v190==(0 + 0)) then local v250=0;while true do if (v250==0) then local v262=53 -(31 + 22) ;while true do if (v262~=0) then else v54={v51,v52,nil,v53};v55=v33();v262=1;end if (v262==1) then v250=1;break;end end end if (v250==(1391 -(105 + 1285))) then v190=1 + 0 ;break;end end end end break;end end end if ((2 + 0)~=v50) then else local v191=0;while true do if (v191==1) then for v217=1,v33() do local v218=818 -(92 + 726) ;local v219;while true do if (v218==0) then v219=v31();if (v30(v219,1,1 + 0 )==0) then local v263=0;local v264;local v265;local v266;while true do if (v263==(0 + 0)) then local v286=0;while true do if (v286~=0) then else v264=v30(v219,1 + 1 ,77 -(23 + 51) );v265=v30(v219,12 -8 ,3 + 3 );v286=1;end if (1~=v286) then else v263=517 -(222 + 294) ;break;end end end if (3~=v263) then else if (v30(v265,2 + 1 ,3)~=(177 -(24 + 152))) then else v266[719 -(94 + 621) ]=v56[v266[4]];end v51[v217]=v266;break;end if (v263~=(1 + 0)) then else local v288=0 -0 ;local v289;while true do if (v288==(0 + 0)) then v289=0 -0 ;while true do if (v289==(1 + 0)) then v263=2;break;end if (0==v289) then v266={v32(),v32(),nil,nil};if (v264==0) then local v321=0;local v322;local v323;while true do if ((4 -3)~=v321) then else while true do if (v322==0) then v323=0 + 0 ;while true do if (v323==0) then v266[13 -10 ]=v32();v266[4]=v32();break;end end break;end end break;end if (v321~=(288 -(28 + 260))) then else v322=0;v323=nil;v321=1;end end elseif (v264==(1 -0)) then v266[3 + 0 ]=v33();elseif (v264==(1738 -(1274 + 462))) then v266[11 -8 ]=v33() -((7 -5)^16) ;elseif (v264~=(4 -1)) then else local v333=0;local v334;local v335;while true do if (0==v333) then v334=0;v335=nil;v333=2 -1 ;end if ((1466 -(210 + 1255))~=v333) then else while true do if (v334==(0 + 0)) then v335=0 -0 ;while true do if (v335==0) then v266[3]=v33() -((2 -0)^(35 -19)) ;v266[4]=v32();break;end end break;end end break;end end end v289=1;end end break;end end end if ((2 + 0)~=v263) then else local v290=0;while true do if ((1 + 0)~=v290) then else v263=3;break;end if (0==v290) then if (v30(v265,2 -1 ,1)==(1 + 0)) then v266[2]=v56[v266[2 + 0 ]];end if (v30(v265,4 -2 ,1176 -(211 + 963) )==(1 -0)) then v266[2 + 1 ]=v56[v266[87 -(42 + 42) ]];end v290=646 -(536 + 109) ;end end end end end break;end end end v50=3 -0 ;break;end if (v191==(0 -0)) then local v215=0;local v216;while true do if (v215==(0 + 0)) then v216=1594 -(1511 + 83) ;while true do if (v216~=(2 -1)) then else v191=1;break;end if (v216==(0 -0)) then for v272=3 -2 ,v55 do local v273=0 + 0 ;local v274;local v275;local v276;local v277;while true do if (v273==(1281 -(1109 + 172))) then local v293=1311 -(1192 + 119) ;while true do if (v293==0) then v274=0;v275=nil;v293=1;end if (v293==(480 -(417 + 62))) then v273=1 + 0 ;break;end end end if ((3 -2)~=v273) then else local v294=0 + 0 ;while true do if (0~=v294) then else v276=nil;v277=nil;v294=1 + 0 ;end if (v294~=1) then else v273=5 -3 ;break;end end end if (v273==(8 -6)) then while true do if (v274~=(1 + 0)) then else v277=nil;while true do if (v275~=0) then else local v318=0;local v319;while true do if (v318==0) then v319=0;while true do if (v319==(0 -0)) then local v332=0 -0 ;while true do if (1~=v332) then else v319=1 -0 ;break;end if (v332==0) then v276=v31();v277=nil;v332=1;end end end if (1==v319) then v275=1;break;end end break;end end end if ((1 -0)==v275) then if (v276==(3 -2)) then v277=v31()~=0 ;elseif (v276==2) then v277=v34();elseif (v276~=(1 + 2)) then else v277=v35();end v56[v272]=v277;break;end end break;end if (v274~=0) then else v275=0 -0 ;v276=nil;v274=1;end end break;end end end v54[3]=v31();v216=1 + 0 ;end end break;end end end end end v120=1;end end end if (v116==1) then v89=1;break;end end end end break;end end break;end end end break;end if (v49~=(6 -4)) then else local v83=0;while true do if (v83~=(2 -1)) then else v49=3 + 0 ;break;end if ((25 -(9 + 16))==v83) then v54=nil;v55=nil;v83=1;end end end end end;v27=5;end if (v27==5) then v39=nil;v39=function(v43,v44,v45)local v57=0;local v58;local v59;local v60;while true do if (v57==0) then v58=v43[1];v59=v43[2];v57=1;end if (v57==1) then v60=v43[3];return function(...)local v90=1;local v91= -1;local v92={...};local v93=v13("#",...) -1 ;local function v94()local v95=v58;local v96=v59;local v97=v60;local v98=v37;local v99={};local v100={};local v101={};for v105=0 -0 ,v93 do if (((762 + 1675)>(1159 -(87 + 285))) and (v105>=v97)) then v99[v105-v97 ]=v92[v105 + 1 + 0 ];else v101[v105]=v92[v105 + (923 -(470 + 452)) ];end end local v102=(v93-v97) + (1 -0) ;local v103;local v104;while true do local v106=0 -0 ;while true do if (((6592 -(488 + 1398))>(127 + 2461)) and (v106==(3 -2))) then if ((2073==(505 + 90 + 1478)) and (v104<=15)) then if ((129<=(9438 -5404)) and (v104<=(1 + 6))) then if ((v104<=(7 -4)) or ((4188 -(85 + 319))>(2805 + 1214))) then if (((5922 -(7296 -2959))==(3211 -(1164 + 462))) and (v104<=(1 + 0))) then if (((2812 -(7 + 681))==(4991 -2867)) and (v104>(0 -0))) then v101[v103[5 -3 ]]=v44[v103[8 -5 ]];else do return;end end elseif ((v104==((14 -8) -4)) or ((6089 -(1375 + 160))<(188 + 321))) then local v124=0 + 0 ;local v125;local v126;local v127;while true do if ((v124==(0 -0)) or (((2291 -706) -(162 + 29 + (1013 -320)))==3874)) then v125=0 + 0 ;v126=nil;v124=1 + 0 + 0 ;end if ((v124==1) or ((5016 -3768)<(267 + 12))) then v127=nil;while true do if ((v125==(1107 -(757 + (825 -(147 + 328))))) or ((2795 + 313)<=1289)) then local v220=563 -(217 + 346) ;local v221;while true do if (((127 + 205)==332) and (v220==0)) then v221=0 + 0 ;while true do if ((v221==(418 -(222 + 196))) or ((3311 -(60 + 201))==(8089 -4915))) then v126=v103[8 -6 ];v127=v101[v103[3 + 0 + 0 ]];v221=1 + 0 ;end if ((2571<=(7564 -4591)) and (v221==(1 + 0))) then v125=1 + 0 ;break;end end break;end end end if ((v125==(1591 -(286 + 214 + 1090))) or (((2650 + 142) -(438 + 1208))==3628)) then v101[v126 + (2 -1) ]=v127;v101[v126]=v127[v103[814 -(254 + 556) ]];break;end end break;end end else v101[v103[197 -(93 + 102) ]]=v45[v103[3 + 0 ]];end elseif (((1772 -(276 + 854))<1499) and (v104<=(17 -12))) then if ((v104==((2433 -1489) -(397 + 543))) or ((13 + 1302)>((4508 -1092) + 1343))) then local v130=0;local v131;while true do if (((262 + 455)<(3762 -1887)) and ((0 + 0)==v130)) then v131=v103[932 -(692 + 238) ];v101[v131]=v101[v131](v14(v101,v131 + (2 -1) ,v103[(1 + 9) -7 ]));break;end end else v101[v103[2]]=v101[v103[1 + 2 ]];end elseif (((12 + 43)<=(5061 -(387 + 434))) and (v104>(3 + 3))) then local v134=0 + 0 ;local v135;local v136;local v137;local v138;while true do if (((1409 + 366)>(1524 + 16)) and (v134==(311 -((658 -471) + 122)))) then while true do if ((v135==0) or (((10744 -(1143 + 414)) -(5715 + 351))>(4606 + 112))) then local v225=(1842 -(298 + 1544)) -0 ;local v226;while true do if ((v225==(0 -(0 -0))) or ((13018 -8186)<=(3004 + 875))) then v226=0;while true do if (((3075 + 490 + 622)==(19081 -14894)) and (v226==(0 + 0))) then local v280=996 -(62 + 934) ;while true do if ((v280==0) or ((191 + 4539)==(150 -51))) then v136=v96[v103[130 -(58 + 69) ]];v137=nil;v280=(1686 -(4 + 1679)) -2 ;end if ((v280==(757 -(506 + 250))) or ((15395 -11282)<=(6821 -4834))) then v226=(387 -(62 + 324)) + 0 ;break;end end end if (((1 -0)==v226) or ((810 + 1323)==(1589 + 593))) then v135=1 + 0 + 0 ;break;end end break;end end end if (((1638 -((661 -(225 + 337)) + 31))>=(1407 -(421 + 632))) and ((1 + (609 -(46 + 562)))==v135)) then for v239=1,v103[4] do local v240=1147 -(12 + 1135) ;local v241;local v242;while true do if (((8855 -5246)>2660) and (v240==(1 + 0))) then while true do if (((7071 -4024)>=((2208 + 122) -1554)) and (v241==0)) then local v282=0 -(981 -(700 + 281)) ;while true do if (((2591 -(452 + 172))<=2326) and (0==v282)) then v90=v90 + (2 -(596 -(102 + 493))) ;v242=v95[v90];v282=1 -0 ;end if (((2 -(1 + 0))==v282) or ((6120 -(1546 + 236))<=(2577 -(1531 + 21)))) then v241=(1 -0) -0 ;break;end end end if (((34 + 112)<=(4624 -(860 + 381))) and (v241==(1 -0))) then if ((639>(2053 -(475 + 683 + 698 + 40))) and (v242[1 + (205 -(182 + 23)) ]==(4 + 1))) then v138[v239-(1 + 0) ]={v101,v242[3]};else v138[v239-(1 + 0) ]={v44,v242[1308 -(141 + 1164) ]};end v100[ #v100 + (122 -(49 + 72)) ]=v138;break;end end break;end if (((254 -129)==(1660 -(878 + 657))) and (v240==((1509 -1180) -(223 + 106)))) then v241=0;v242=nil;v240=1;end end end v101[v103[(3 -2) + 1 ]]=v39(v136,v137,v45);break;end if (((9440 -(1524 + 4747))>(833 -(312 + 122))) and (v135==(1 -0))) then local v228=0 -0 ;local v229;while true do if (((109 -51)<=(6245 -(347 + 1425))) and (v228==0)) then v229=14 -((129 -(30 + 87)) + 2) ;while true do if (((1226 -(420 + 129 + 676))==v229) or ((1426 + 3036)<=(2326 -((81 -52) + 173)))) then v135=(9 -7) + 0 ;break;end if ((v229==(0 -0)) or ((4407 + 556)<((795 -328) + 402))) then local v281=0 + 0 ;while true do if (((706 + 2004)==(6214 -3504)) and (v281==1)) then v229=1 -0 ;break;end if ((v281==(914 -(620 + (984 -690)))) or (38==2740)) then v138={};v137=v11({},{__index=function(v298,v299)local v304=0 -0 ;local v305;while true do if (((1504 + 823)<(10943 -(7251 -(684 + 114)))) and (v304==(405 -(363 + 42)))) then local v317=0;while true do if (((2590 + 1741)>=(355 + 1601)) and (v317==(0 -0))) then v305=v138[v299];return v305[1 + (484 -(323 + 161)) ][v305[21 -(6 + 13) ]];end end end end end,__newindex=function(v298,v299,v300)local v306=0 -0 ;local v307;local v308;while true do if ((((1980 -1178) + 600)<=2479) and (v306==(0 -0))) then v307=(1809 -(1180 + 629)) -0 ;v308=nil;v306=1 + 0 ;end if ((((231 + 5312) -(152 + 594))>(2740 + 1293)) and (v306==(1 + 0))) then while true do if ((v307==(0 -0)) or ((1885 + 2009)<(4996 -(1337 + 549)))) then v308=v138[v299];v308[(901 -(521 + 376)) -3 ][v308[4 -2 ]]=v300;break;end end break;end end end});v281=2 -1 ;end end end end break;end end end end break;end if ((0==v134) or ((5557 -(1298 + 674))>=(544 + 3053))) then v135=83 -(56 + 27) ;v136=nil;v134=1;end if ((v134==((1 -0) + (1092 -(575 + 517)))) or ((3640 -(76 + 28))<2289)) then v137=nil;v138=nil;v134=2 + 0 ;end end else local v139=0 -0 ;local v140;local v141;local v142;local v143;while true do if (((5305 -(494 + 75))>=2683) and (v139==(1 + 1))) then for v208=v140,v91 do local v209=0;while true do if (((424 + 357)<((2250 -(367 + 243)) + 352)) and (0==v209)) then v143=v143 + (1 -0) ;v101[v208]=v141[v143];break;end end end break;end if ((v139==(1 + 0)) or ((1007 + 641)<=(1565 -(54 + 7 + 3)))) then local v202=0 -0 ;while true do if (((562 -(71 + 14))==(427 + 50)) and (v202==(0 + 0))) then v91=(v142 + v140) -(1 + 0 + 0) ;v143=1189 -((1727 -(453 + 1139)) + 1054) ;v202=2 -1 ;end if (((1801 -(23 + 78))==(745 + 955)) and (v202==(2 -1))) then v139=2;break;end end end if ((4875>=(2275 + 1361)) and (v139==(1106 -(511 + 595)))) then v140=v103[(929 -(225 + 702)) -0 ];v141,v142=v98(v101[v140](v101[v140 + (674 -(585 + (226 -138))) ]));v139=1;end end end elseif (((1029 -(90 + 91))<=((5586 + 1074) -4536)) and (v104<=(2 + 9))) then if ((v104<=(4 + 5)) or (((3555 + 5292) -5404)>=(5145 -1096))) then if (((7575 -(5533 -(985 + 413)))<(2621 + 1449)) and (v104>(36 -28))) then local v144=0 + 0 ;local v145;local v146;while true do if ((0==v144) or (((22223 -15421) -(1194 + 760))<(3353 -(114 + 199)))) then v145=(1761 -(925 + 438)) -(112 + 286) ;v146=nil;v144=1 + 0 ;end if ((v144==(65 -(38 + 26))) or (239==1855)) then while true do if ((3635>=(1714 -403)) and (v145==(0 + 0))) then v146=v103[2 + 0 ];v101[v146]=v101[v146](v101[v146 + (112 -(24 + 87)) ]);break;end end break;end end elseif ( not v101[v103[2 -0 ]] or ((1341 + 1943)<(1595 -602))) then v90=v90 + 1 + 0 ;else v90=v103[1867 -(397 + 1467) ];end elseif ((v104>(27 -17)) or (2309<(3344 -1142))) then v90=v103[(834 -(367 + 465)) + 1 ];else local v148=0 + 0 ;local v149;local v150;local v151;local v152;local v153;while true do if ((v148==(985 -(921 + 63))) or ((3108 + 1581)<328)) then v151=nil;v152=nil;v148=1 + 1 ;end if ((((2636 -1469) -440)==(2216 -(140 + 1349))) and ((0 + 0)==v148)) then v149=0 + 0 + 0 ;v150=nil;v148=2 -1 ;end if ((3476<=(1599 + 2249)) and (v148==(533 -(170 + (696 -335))))) then v153=nil;while true do if (((17629 -13120)>2518) and (v149==(99 -(74 + 24)))) then local v232=1582 -(197 + 1385) ;while true do if ((v232==((62 + 277) -(213 + 126))) or (1248>(5861 -(1060 + 310)))) then v91=(v152 + v150) -(1 + 0) ;v153=0;v232=1;end if (((5762 -(592 + 254))>(1210 -833)) and (v232==(3 -2))) then v149=2 + 0 ;break;end end end if ((v149==(0 -0)) or ((1983 -(838 + 527))>=(460 + 135 + (5967 -3655)))) then v150=v103[7 -(8 -3) ];v151,v152=v98(v101[v150](v14(v101,v150 + (1504 -(844 + 659)) ,v103[(465 + 45) -(340 + 167) ])));v149=912 -(202 + 709) ;end if (((2 + 0)==v149) or (1229<(3268 -2275))) then for v245=v150,v91 do local v246=0 + 0 ;local v247;while true do if (((5305 -2857)==(288 + 131 + 2029)) and (v246==(0 + 0))) then v247=1652 -(1313 + 339) ;while true do if ((v247==0) or (1024==(4086 -(101 + 165)))) then v153=v153 + 1 + 0 ;v101[v245]=v151[v153];break;end end break;end end end break;end end break;end end end elseif ((v104<=((101 -(89 + 2)) + 3)) or (299>(529 + 82))) then if (((3825 -1468)<2472) and (v104==(4 + 8))) then for v187=v103[1 + 1 ],v103[3] do v101[v187]=nil;end else local v154=0;local v155;local v156;while true do if (((952 -(114 + 4))==(322 + 512)) and (v154==(1 + 0))) then for v210=1 -(0 + 0) , #v100 do local v211=0 -0 ;local v212;while true do if (((3349 -(3892 -(287 + 1360)))<2050) and ((0 -0)==v211)) then v212=v100[v210];for v251=0, #v212 do local v252=1909 -(1820 + 89) ;local v253;local v254;local v255;local v256;while true do if ((1372<2578) and (v252==(677 -(504 + 171)))) then while true do if (((5149 -(109 + 696))==(5113 -(270 + 499))) and (v253==(0 + 0))) then local v291=0;while true do if (((370 + 2)<(2423 -((1321 -(330 + 844)) + 219))) and (v291==(1 + 0))) then v253=1 + 0 ;break;end if (((1932 -(780 + 1152))==v291) or ((3577 + 1414)<(2199 + 1390))) then v254=v212[v251];v255=v254[1];v291=1;end end end if (((945 + 1177)==(974 + 1148)) and ((1 + 0)==v253)) then v256=v254[746 -(262 + 482) ];if (((v255==v101) and (v256>=v155)) or ((2212 -(21 + 15 + 193))>=2342)) then local v309=0;local v310;while true do if ((v309==(0 -0)) or ((4219 -2756)==3378)) then v310=0 + 0 ;while true do if ((124<=(7334 -5377)) and (v310==((0 + 0) -0))) then v156[v256]=v255[v256];v254[1114 -(4 + 1109) ]=v156;break;end end break;end end end break;end end break;end if (((3859 -845)>1763) and (v252==(1793 -(646 + 1146)))) then v255=nil;v256=nil;v252=3 -1 ;end if (((10370 -6318)>(1724 -((2719 -(1212 + 92)) + (609 -(31 + 371))))) and (v252==(0 + 0))) then v253=0 + 0 ;v254=nil;v252=1 + 0 ;end end end break;end end end break;end if ((v154==0) or ((1761 -(167 + 19))>(5726 -4025))) then v155=v103[1103 -(1087 + 14) ];v156={};v154=1 + 0 ;end end end elseif (((9290 -6073)>(43 + 106)) and (v104==14)) then local v157=0 + 0 ;local v158;local v159;while true do if ((1503<(2427 -(5 + 9))) and (v157==(1 + (0 -0)))) then while true do if (((7194 -3399)>(4379 -(1467 + 189))) and (v158==((560 + 1356) -(437 + 1479)))) then v159=v103[3 -1 ];v101[v159](v14(v101,v159 + (1 -0) ,v91));break;end end break;end if ((327>=(932 -(402 + 497))) and (v157==(0 + 0 + 0))) then local v205=1307 -(525 + 782) ;while true do if (((1 + 0)==v205) or (((934 -688) + 406)>(2050 -729))) then v157=1;break;end if (((1169 + 1399)>=808) and ((0 -0)==v205)) then v158=0 + 0 ;v159=nil;v205=1043 -(530 + 512) ;end end end end else v101[v103[2 + 0 ]]();end elseif ((v104<=23) or (28>=3986)) then if ((3822>=(3848 -(683 + 981))) and (v104<=(19 + 0))) then if (((562 + 1704)<2733) and (v104<=((45 + 52) -(47 + 33)))) then if (((3137 -1562)<=(2224 + 1592)) and (v104>16)) then if ((2432==(411 + 939 + 1082)) and (v101[v103[2 -(0 + 0) ]]==v101[v103[3 + 1 ]])) then v90=v90 + 1 ;else v90=v103[3];end else v44[v103[73 -(62 + 8) ]]=v101[v103[861 -(654 + 61 + 144) ]];end elseif ((v104>(1648 -(463 + 111 + 1056))) or ((5082 -(1139 + 344))>(523 + 3199))) then local v162=1338 -(494 + 844) ;local v163;local v164;while true do if ((v162==(0 + 0)) or ((10013 -7319)>(293 + 2991))) then v163=0 -0 ;v164=nil;v162=1;end if (((933 + 1617)<=(6559 -2813)) and (v162==1)) then while true do if (((8087 -4393)>=(367 + 1315)) and (v163==(0 + 0))) then v164=v103[998 -(130 + 866) ];v101[v164](v101[v164 + 1 + 0 ]);break;end end break;end end else local v165=0 + 0 ;local v166;local v167;local v168;while true do if ((v165==((519 -(145 + 374)) -0)) or ((2580 -(185 + 31))<=((3203 -(545 + 476)) -(308 + 40)))) then v166=986 -(237 + 749) ;v167=nil;v165=1 + 0 ;end if ((v165==1) or ((4158 -(367 + 36))<(273 + 1190))) then v168=nil;while true do if (((15 + 1)<(3464 -((1216 -(736 + 131)) + 1276))) and (v166==((1052 -(106 + 942)) -3))) then while true do if ((v167==(0 + 0)) or ((2262 -(254 + 5))<(2351 -(1699 + 119)))) then v168=v103[2 -(0 -0) ];v101[v168]=v101[v168]();break;end end break;end if ((v166==(1704 -(1135 + 569))) or ((2055 -1260)==(2981 -(838 + 1088)))) then v167=313 -(193 + 120) ;v168=nil;v166=248 -(243 + 4) ;end end break;end end end elseif (((1741 + 841 + 231)>(2685 -(101 + 461))) and (v104<=((1803 -(944 + 818)) -20))) then if (((1296 + 2503)>=(2381 -767)) and (v104>20)) then if ((v101[v103[1 + (2 -1) ]]==v103[2 + 2 ]) or ((446 -277)==(3083 -1551))) then v90=v90 + 1 ;else v90=v103[10 -7 ];end else local v169=0 -0 ;local v170;local v171;local v172;while true do if ((v169==(1 -0)) or ((1884 -((464 -239) + 89))>(3690 -(206 + (940 -(260 + 314)))))) then v172=nil;while true do if ((v170==(1715 -(1210 + 505))) or (4173==(1707 -(79 + 784)))) then local v236=0;while true do if (((3502 -(541 + (2554 -(542 + 736))))>=(715 + 421)) and (v236==(0 + 0))) then v171=241 -(63 + 178) ;v172=nil;v236=(211 + 1506) -(1315 + 112 + 289) ;end if ((v236==1) or ((2753 + 547)<(2139 -(593 + 4)))) then v170=3 -2 ;break;end end end if ((v170==(784 -(504 + 279))) or (((3957 -2721) + 1694 + 26)<(8364 -5542))) then while true do if (((15258 -10411)>464) and (v171==(0 -0))) then v172=v103[1 + 1 ];v101[v172](v14(v101,v172 + 1 + 0 + 0 ,v103[1 + 2 ]));break;end end break;end end break;end if (((1257 + 1802)==(1517 + 1542)) and (v169==(0 -(0 + 0)))) then v170=1920 -(43 + 1877) ;v171=nil;v169=2 -1 ;end end end elseif ((((71 -24) + 4859)>=(983 -(149 + 526))) and (v104==(17 + 5))) then local v173=0;local v174;local v175;while true do if (((5996 -(21 + 1710))>(679 + 174)) and (v173==(0 -0))) then local v206=0;while true do if (((1448 -(963 + 77))<(1855 -1362)) and (v206==((2 + 1) -2))) then v173=451 -(289 + 161) ;break;end if ((4750>(1048 + 2755)) and ((1485 -(177 + 1308))==v206)) then v174=v103[187 -(124 + 60) ];v175=v101[v174];v206=800 -(445 + 354) ;end end end if ((v173==(2 -1)) or ((1743 -1145)==3114)) then for v213=v174 + (2 -1) ,v103[3 + (265 -(246 + 18)) ] do v175=v175   .. v101[v213] ;end v101[v103[372 -(31 + 339) ]]=v175;break;end end else v101[v103[638 -(629 + 7) ]]=v103[12 -9 ];end elseif ((v104<=27) or ((10984 -7564)<=(942 + (465 -(6 + 68))))) then if ((v104<=((427 -315) -87)) or ((521 -344)>=(576 + 3162))) then if (((801 -((1967 -(16 + 1867)) + 184))<(5358 -(1638 + 205))) and (v104==(988 -((746 -469) + 687)))) then v101[v103[1 + 1 ]]=v103[3]~=0 ;elseif (((2810 + (726 -(20 + 425)))<=(11513 -7246)) and (v103[2]==v101[v103[(8734 -6744) -(290 + 914 + (2208 -1426)) ]])) then v90=v90 + 1 ;else v90=v103[3];end elseif ((v104>(46 -20)) or ((5135 -(925 + (256 -141)))==3385)) then local v179=902 -(748 + 40 + 114) ;local v180;local v181;local v182;while true do if (((5700 -(1305 + 797))>=(3692 -(1381 + 604))) and (v179==1)) then v182=nil;while true do if ((786>=(339 + 434)) and (v180==((0 + 0) -0))) then v181=(114 + 472) -(242 + 344) ;v182=nil;v180=1 + 0 ;end if ((((648 + 1568) -1061)==(3342 -2187)) and (v180==1)) then while true do if ((v181==0) or ((2337 + 744)>=(5066 -(168 + 40)))) then v182=v103[(3260 -(341 + 1270)) -(602 + 579 + 466) ];v101[v182]=v101[v182](v14(v101,v182 + 1 + 0 ,v91));break;end end break;end end break;end if ((((0 -0) + 0)==v179) or (3001>(6385 -(851 + 931)))) then v180=1768 -((2029 -(22 + 831)) + (1718 -1126)) ;v181=nil;v179=1;end end else v101[v103[1404 -(165 + 1237) ]]= not v101[v103[3 + 0 ]];end elseif (((5224 -(902 + 316))==(5734 -1728)) and (v104<=(1440 -(1245 + 166)))) then if ((v104>((1609 -(425 + 1113)) -43)) or (1370>=(10508 -5743))) then if (v101[v103[2]] or ((5259 -(625 + 456))<=416)) then v90=v90 + 1 + 0 ;else v90=v103[3];end else v101[v103[8 -6 ]]=v39(v96[v103[1 + 2 ]],nil,v45);end elseif ((v104<=(15 + 15)) or (4919<(2381 + 324))) then v101[v103[1674 -(610 + 1062) ]]=v101[v103[1 + 2 ]][v103[7 -3 ]];elseif ((355<(720 + 28)) and (v104==(1954 -(1597 + (617 -291))))) then v101[v103[1 + 1 ]][v103[(3586 -2085) -(1010 + 488) ]]=v103[3 + 1 ];else v101[v103[2 + 0 ]]={};end v90=v90 + (1881 -(336 + 649 + 895)) ;break;end if ((v106==0) or ((3671 -(626 + 1275))>=3771)) then local v113=0 -0 ;while true do if ((v113==1) or (611==(4555 -(256 + 1215)))) then v106=1 -0 ;break;end if ((v113==(0 -0)) or ((1172 -669)>=815)) then v103=v95[v90];v104=v103[1];v113=1;end end end end end end A,B=v37(v12(v94));if  not A[1] then local v107=v43[4][v90] or "?" ;error("Script error at ["   .. v107   .. "]:"   .. A[2] );else return v14(A,2,B);end end;end end end;return v39(v38(),{},v18)(...);end if (v27==2) then v32=function()local v61,v62=v2(v17,v28,v28 + (5 -3) );v28=v28 + (2 -0) ;return (v62 * (717 -461)) + v61 ;end;v33=nil;v33=function()local v63=0 + 0 ;local v64;local v65;local v66;local v67;while true do if (v63==(1224 -(438 + 785))) then return (v67 * (13568754 + 3208462)) + (v66 * 65536) + (v65 * (451 -195)) + v64 ;end if (v63==(0 -0)) then v64,v65,v66,v67=v2(v17,v28,v28 + (3 -0) );v28=v28 + 4 ;v63=1351 -(722 + 628) ;end end end;v34=nil;v27=3;end if (v27==0) then v28=1;v29=nil;v17=v5(v4(v17,5),"..",function(v46)if (v2(v46,2)==79) then v29=v1(v4(v46,1,1));return "";else local v80=0;local v81;while true do if (v80==0) then v81=v3(v1(v46,16));if v29 then local v108=v6(v81,v29);v29=nil;return v108;else return v81;end break;end end end end);v30=nil;v27=1;end if (v27==3) then v34=function()local v68=v33();local v69=v33();local v70=1;local v71=(v30(v69,1626 -(281 + 1344) ,75 -55 ) * ((2 + 0)^(1710 -(28 + 673 + 977)))) + v68 ;local v72=v30(v69,21,278 -(17 + 230) );local v73=((v30(v69,1467 -((214 -125) + 1346) )==(226 -(82 + 143))) and  -(1 + 0)) or (724 -(522 + 201)) ;if (v72==(1123 -(418 + 705))) then if (v71==(0 -0)) then return v73 * (0 + 0) ;else v72=1;v70=0;end elseif (v72==(2297 -(72 + 178))) then return ((v71==(0 + 0)) and (v73 * ((1 + 0)/(0 -0)))) or (v73 * NaN) ;end return v9(v73,v72-(1743 -720) ) * (v70 + (v71/((1400 -(834 + 564))^(25 + 27)))) ;end;v35=nil;v35=function(v47)local v74;if  not v47 then local v82=0 + 0 ;while true do if ((0 + 0)==v82) then v47=v33();if (v47==(0 + (239 -(28 + 211)))) then return "";end break;end end end v74=v4(v17,v28,(v28 + v47) -(3 -2) );v28=v28 + v47 ;local v75={};for v76=1 + 0 , #v74 do v75[v76]=v3(v2(v4(v74,v76,v76)));end return v7(v75);end;v36=v33;v27=4;end end end;vv10(),...);break;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==3) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end end end
